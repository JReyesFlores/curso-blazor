@using Entidades
@using Business

<EditForm Model="oStorage">
    <div class="form-group">
        <label>Bodega:</label>
        <InputSelect @bind-Value="oStorage.WherehouseId" class="form-control">
            <option value="">Seleccione una bodega</option>
            @foreach (var bodega in wherehouses)
            {
                <option value="@bodega.WherehouseId">@bodega.WherehouseName</option>
            }
        </InputSelect>
    </div>

    <div class="form-group">
        <label>Producto:</label>
        <InputSelect @bind-Value="oStorage.ProductId" class="form-control">
            <option value="">Seleccione un producto</option>
            @foreach (var product in products)
            {
                <option value="@product.ProductId">@product.ProductName</option>
            }
        </InputSelect>
    </div>

    <input type="button" value="Almacenar producto" @onclick="SaveStorage" class="btn btn-outline-success" />
</EditForm>

<div class="text-center h4">
    @message
</div>

@code {
    StorageEntity oStorage = new StorageEntity();
    List<WherehouseEntity> wherehouses = new List<WherehouseEntity>();
    List<ProductEntity> products = new List<ProductEntity>();
    string message = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        wherehouses = B_Wherehouse.ListWherehouse();
        products = B_Product.ProductList();
    }

    private void SaveStorage()
    {
        oStorage.StorageId = $"{oStorage.ProductId}-{oStorage.WherehouseId}";

        if (!B_Storage.IsProductInWherehouse(oStorage.StorageId))
        {
            oStorage.LastUpdate = DateTime.Now; 
            B_Storage.CreateStorage(oStorage);

            message = "Producto registrado!!";
        }
        else
        {
            message = "Producto Existente!!";
        }
    }
}